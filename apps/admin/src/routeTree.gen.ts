/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersCreateRouteImport } from './routes/users/create'
import { Route as UsersActiveRouteImport } from './routes/users/active'
import { Route as MenuEditRouteImport } from './routes/menu/edit'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersCreateRoute = UsersCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => UsersRoute,
} as any)
const UsersActiveRoute = UsersActiveRouteImport.update({
  id: '/active',
  path: '/active',
  getParentRoute: () => UsersRoute,
} as any)
const MenuEditRoute = MenuEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => MenuRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/menu': typeof MenuRouteWithChildren
  '/settings': typeof SettingsRoute
  '/users': typeof UsersRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/menu/edit': typeof MenuEditRoute
  '/users/active': typeof UsersActiveRoute
  '/users/create': typeof UsersCreateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/menu': typeof MenuRouteWithChildren
  '/settings': typeof SettingsRoute
  '/users': typeof UsersRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/menu/edit': typeof MenuEditRoute
  '/users/active': typeof UsersActiveRoute
  '/users/create': typeof UsersCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/menu': typeof MenuRouteWithChildren
  '/settings': typeof SettingsRoute
  '/users': typeof UsersRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/menu/edit': typeof MenuEditRoute
  '/users/active': typeof UsersActiveRoute
  '/users/create': typeof UsersCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/menu'
    | '/settings'
    | '/users'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/menu/edit'
    | '/users/active'
    | '/users/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/menu'
    | '/settings'
    | '/users'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/menu/edit'
    | '/users/active'
    | '/users/create'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/menu'
    | '/settings'
    | '/users'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/menu/edit'
    | '/users/active'
    | '/users/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  MenuRoute: typeof MenuRouteWithChildren
  SettingsRoute: typeof SettingsRoute
  UsersRoute: typeof UsersRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/create': {
      id: '/users/create'
      path: '/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof UsersCreateRouteImport
      parentRoute: typeof UsersRoute
    }
    '/users/active': {
      id: '/users/active'
      path: '/active'
      fullPath: '/users/active'
      preLoaderRoute: typeof UsersActiveRouteImport
      parentRoute: typeof UsersRoute
    }
    '/menu/edit': {
      id: '/menu/edit'
      path: '/edit'
      fullPath: '/menu/edit'
      preLoaderRoute: typeof MenuEditRouteImport
      parentRoute: typeof MenuRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MenuRouteChildren {
  MenuEditRoute: typeof MenuEditRoute
}

const MenuRouteChildren: MenuRouteChildren = {
  MenuEditRoute: MenuEditRoute,
}

const MenuRouteWithChildren = MenuRoute._addFileChildren(MenuRouteChildren)

interface UsersRouteChildren {
  UsersActiveRoute: typeof UsersActiveRoute
  UsersCreateRoute: typeof UsersCreateRoute
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersActiveRoute: UsersActiveRoute,
  UsersCreateRoute: UsersCreateRoute,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  MenuRoute: MenuRouteWithChildren,
  SettingsRoute: SettingsRoute,
  UsersRoute: UsersRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
